module CustomSources
  class <%= file_name.capitalize %> < CustomSource
    validate :check_validity

    def check_validity
      #Check here for mandatory fields, ex :
      #self.errors.add(:extra, "Missing url") if self.extra["url"].blank?

      #You can also enforce uniqueness for your source, ex :
      #self.errors.add(:extra, "Url already taken") if CustomSource.where("extra ->> 'url'='#{self.extra["url"]}'").present?
    end

    def update_from_params(params:)
      # This method is called when validating your form
      # This method should update an instance of your object with values from the params hash :
      #   - set a name attribute for this source
      #   - all other parameters should be be saved as json in the 'extra' field (see custom_sources/twitter.rb for example)
      self.update(name: "<%= file_name%>", extra: {})
    end

    def display_name
      #return a string to represent this object in the list of sources
    end
    
    def logo
      # return a logo for this source
    end

    def import
      # This method will be run by the cron job at the configured interval
      # This method should get new links according to the cron job interval (ex : get all links for yesterday if it's a daily cron job )
      # Once you have fetched all new links, create Link objects.
      # Each Link object you create here will be posted in the digest mail
    end
  end
end
